<Page x:Class="RabaMetroStyle.Views.SettingsPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:viewModels="clr-namespace:RabaMetroStyle.ViewModels"
      xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
      Title="Settings"
      d:DesignHeight="300"
      d:DesignWidth="300"
      Style="{DynamicResource PageStyle}"
      mc:Ignorable="d">

    <Page.DataContext>
        <viewModels:SettingsViewModel/>
    </Page.DataContext>

    <Grid>

        <iconPacks:PackIconFontAwesome Width="48"
                                       Height="48"
                                       Margin="10"
                                       HorizontalAlignment="Right"
                                       VerticalAlignment="Top"
                                       Foreground="{DynamicResource MahApps.Brushes.AccentBase}"
                                       Kind="CogSolid" />
        <Grid Margin="10, 70, 10, 10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Label Grid.Row="1">Machine Name:</Label>
                <Label Grid.Row="1" Grid.Column="2" Content="{Binding MachineName}"></Label>
                <Label Grid.Row="2">Executable Path:</Label>
                <Label Grid.Row="2" Grid.Column="2" Content="{Binding ExecutablePath}"></Label>
                <Label Grid.Row="3" Grid.Column="0">Settings Folder:</Label>
                <Label Grid.Row="3" Grid.Column="2" Content="{Binding SettingsFolderService}"></Label>
            </Grid>
            <Grid Grid.Row="2" Margin="0,10,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="300" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto" />                    
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Label Grid.Row="1" Grid.Column="1">Macros</Label>
                <Button Grid.Row="1" Grid.Column="1" HorizontalAlignment="Left" Margin="100,0,0,0" Width="100" Command="{Binding AddMacroCommand}">Add</Button>
                <Button Grid.Row="1" Grid.Column="1" HorizontalAlignment="Left" Margin="205,0,0,0" Width="100" Command="{Binding DisableMacroCommand}" IsEnabled="{Binding IsSelectMacroFile}">Disable</Button>
                <Label Grid.Row="1" Grid.Column="5">Disabled Macros</Label>
                <Button Grid.Row="1" Grid.Column="6" HorizontalAlignment="Left" Margin="50,0,0,0" Width="100" Command="{Binding EnableMacroCommand}" IsEnabled="{Binding IsSelectDisabledMacroFile}">Enable</Button>
                <Button Grid.Row="1" Grid.Column="6" HorizontalAlignment="Left" Margin="155,0,0,0" Width="100" Command="{Binding PurgeMacroCommand}" IsEnabled="{Binding IsSelectDisabledMacroFile}">Purge</Button>
                <ListView Grid.Row="3" Grid.RowSpan="4" Grid.Column="1" Grid.ColumnSpan="3" Height="100" ItemsSource="{Binding MacroFilesActive}" SelectedItem="{Binding SelectedMacroFile}">
                    <ListView.ContextMenu>
                        <ContextMenu Name="EnabledList" StaysOpen="true" Background="WhiteSmoke">
                            <MenuItem Header="Add" Name="EnabledListAdd" Command="{Binding AddMacroCommand}"/>
                            <MenuItem Header="Disable" Name="EnabledListDisable" Command="{Binding DisableMacroCommand}" IsEnabled="{Binding IsSelectMacroFile}"/>
                        </ContextMenu>
                    </ListView.ContextMenu>
                </ListView>
                <Button Grid.Row="3" Grid.Column="4" Margin="0,10,0,0" Command="{Binding DisableMacroCommand}" IsEnabled="{Binding IsSelectMacroFile}" Padding="0">
                    <iconPacks:PackIconBootstrapIcons Width="25"
                                       Height="25"                                                      
                                       Foreground="{DynamicResource MahApps.Brushes.AccentBase}"
                                       Kind="ArrowRight" />
                </Button>
                <Button Grid.Row="4" Grid.Column="4" Command="{Binding EnableMacroCommand}" IsEnabled="{Binding IsSelectDisabledMacroFile}" Padding="0">
                    <iconPacks:PackIconBootstrapIcons Width="25"
                                       Height="25"                                                      
                                       Foreground="{DynamicResource MahApps.Brushes.AccentBase}"
                                       Kind="ArrowLeft" />
                </Button>
                <Button Grid.Row="5" Grid.Column="4" Visibility="Hidden">Up</Button>
                <Button Grid.Row="6" Grid.Column="4" Visibility="Hidden">Down</Button>
                <ListView Grid.Row="3" Grid.RowSpan="4" Grid.Column="5" Grid.ColumnSpan="2" Height="100" ItemsSource="{Binding MacroFilesInActive}" SelectedItem="{Binding SelectedDisabledMacroFile}">
                    <ListView.ContextMenu>
                        <ContextMenu Name="DisabledList" StaysOpen="true" Background="WhiteSmoke">
                            <MenuItem Header="Enable" Name="DisabledListEnable" Command="{Binding EnableMacroCommand}" IsEnabled="{Binding IsSelectDisabledMacroFile}"/>
                            <MenuItem Header="Remove" Name="DisabledListRemove" Command="{Binding PurgeMacroCommand}" IsEnabled="{Binding IsSelectDisabledMacroFile}"/>
                        </ContextMenu>
                    </ListView.ContextMenu>
                </ListView>
            </Grid>            
            <Grid Grid.Row="3">
                <Grid.Resources>
                    <!--  for ne metro style  -->
                    <Style TargetType="{x:Type DataGridColumnHeadersPresenter}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="DataGridColumnHeadersPresenter">
                                    <Grid>
                                        <Border Background="Transparent"
                                                BorderBrush="{DynamicResource MahApps:Brushes.Gray5}"
                                                BorderThickness="0 0 0 3"
                                                IsHitTestVisible="False" />
                                        <ItemsPresenter />
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Grid.Resources>
                
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />                    
                </Grid.RowDefinitions>
                <Label Grid.Row="1" Grid.Column="1">Actions</Label>
                <Button Grid.Row="1" Grid.Column="2" HorizontalAlignment="Left" Margin="50,0,0,0" Width="100" Command="{Binding AddActionCommand}" IsEnabled="{Binding IsSelectMacroFile}">Add</Button>
                <Button Grid.Row="1" Grid.Column="2" HorizontalAlignment="Left" Margin="155,0,0,0" Width="100" Command="{Binding EditActionCommand}" IsEnabled="{Binding IsSelectMacroAction}">Edit</Button>
                <Button Grid.Row="1" Grid.Column="2" HorizontalAlignment="Left" Margin="260,0,0,0" Width="100" Command="{Binding DeleteActionCommand}" IsEnabled="{Binding IsSelectMacroAction}">Delete</Button>
                <DataGrid Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" x:Name="SettingsDataGrid"
                              Margin="2"
                              AutoGenerateColumns="False"
                              CanUserAddRows="False"
                              CanUserReorderColumns="False"
                              CanUserResizeColumns="False"
                              CanUserResizeRows="False"
                              EnableColumnVirtualization="True"
                              EnableRowVirtualization="True"
                              IsReadOnly="True"
                              ItemsSource="{Binding CurrentSettingsTable}"
                              SelectedItem="{Binding SelectedItem, Mode=TwoWay}"
                              RenderOptions.ClearTypeHint="Enabled"
                              SelectionUnit="FullRow"
                              SelectedIndex="0"
                              TextOptions.TextFormattingMode="Display">
                    <DataGrid.InputBindings>
                        <MouseBinding Gesture="LeftDoubleClick" Command="{Binding DoubleClickCommand}" />
                    </DataGrid.InputBindings>
                    <DataGrid.Columns>                        
                        <DataGridTextColumn Binding="{Binding ScanLocation}" Header="Scan Location" />
                        <DataGridTextColumn Binding="{Binding IncludeSubFolders}" Header="Include Sub Folder" />
                        <DataGridTextColumn Binding="{Binding ScanFileExtension}" Header="File Extension" />
                        <DataGridTextColumn Binding="{Binding ScanFilePrefix}" Header="Prefix" />
                        <DataGridTextColumn Binding="{Binding ScanFileDateGreaterThan}" Header="Date Greater Than" />
                        <DataGridTextColumn Binding="{Binding ScanFileDateLessThan}" Header="Date Less Than" />
                        <DataGridTextColumn Binding="{Binding ScanFileUseRelativeAgeYounger}" Header="Use Relative Age Younger" />
                        <DataGridTextColumn Binding="{Binding ScanFileUseRelativeAgeOlder}" Header="Use Relative Age Older" />
                        <DataGridTextColumn Binding="{Binding ScanFileAgeYounger}" Header="File Age Younger (Days)" />
                        <DataGridTextColumn Binding="{Binding ScanFileAgeOlder}" Header="File Age Older (Days)" />
                        <DataGridTextColumn Binding="{Binding OnlyCountWeekDays}" Header="Only Count Weekdays" />
                        <DataGridTextColumn Binding="{Binding ScanFileSizeGreaterThan}" Header="Size Greater Than" />
                        <DataGridTextColumn Binding="{Binding ScanFileSizeLessThan}" Header="Size Less Than" />
                        <DataGridTextColumn Binding="{Binding Action}" Header="Action" />
                        <DataGridTextColumn Binding="{Binding Dependent}" Header="Dependent" />
                        <DataGridTextColumn Binding="{Binding ActionCompleteRename}" Header="On Completion Rename" />
                        <DataGridTextColumn Binding="{Binding ActionCompleteTimeStamp}" Header="On Completion Time Stamp" />
                        <DataGridTextColumn Binding="{Binding ActionCompleteDelete}" Header="On Completion Time Delete" />
                        <DataGridTextColumn Binding="{Binding TargetLocation}" Header="Target Location" />
                        <DataGridTextColumn Binding="{Binding MaintainSubFolders}" Header="Maintain Sub Folder" />
                        <DataGridTextColumn Binding="{Binding Command}" Header="Command" />
                        <DataGridTextColumn Binding="{Binding IntegratedSecurity}" Header="Integrated Security" />
                        <DataGridTextColumn Binding="{Binding UserID}" Header="UserId" />
                        <DataGridTextColumn Binding="{Binding Password}" Header="Password" />
                        <DataGridTextColumn Binding="{Binding DatabaseName}" Header="Database" />
                        <DataGridTextColumn Binding="{Binding DatabaseServer}" Header="Server" />
                        <DataGridTextColumn Binding="{Binding TaskOrder}" Header="Task Order" />
                        <DataGridTextColumn Binding="{Binding RunSQLScript}" Header="Run SQL Script" />
                        <DataGridTextColumn Binding="{Binding RunSQLScriptFilePath}" Header="Script Path" />
                        <DataGridTextColumn Binding="{Binding RestoreDatabaseFileGroups}" Header="Restore File Group" />
                    </DataGrid.Columns>
                </DataGrid>
                <Grid.ContextMenu>
                    <ContextMenu Name="MacroActionGrid" StaysOpen="true" Background="WhiteSmoke">
                        <MenuItem Header="Add" Name="MacroActionGridAdd" Command="{Binding AddActionCommand}" IsEnabled="{Binding IsSelectMacroFile}"/>
                        <MenuItem Header="Edit" Name="MacroActionGridEdit" Command="{Binding EditActionCommand}" IsEnabled="{Binding IsSelectMacroAction}"/>
                        <MenuItem Header="Copy And Paste" Name="MacroActionGridCopy" Command="{Binding CopyActionCommand}" IsEnabled="{Binding IsSelectMacroAction}"/>
                        <MenuItem Header="Delete" Name="MacroActionGridDelete" Command="{Binding DeleteActionCommand}" IsEnabled="{Binding IsSelectMacroAction}"/>
                    </ContextMenu>                    
                </Grid.ContextMenu>
                    
            </Grid>
        </Grid>
    </Grid>
</Page>
